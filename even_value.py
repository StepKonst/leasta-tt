# На языке Python написать алгоритм (функцию) определения
# четности целого числа, который будет аналогичен нижеприведенному
# по функциональности, но отличен по своей сути.

# Объяснить плюсы и минусы обеих реализаций.


# Пример:


# Данный пример, на мой взгляд, является самым очевидным для решения
# этой задачи. В нем сочетаются простота читаемости и эффективность.
def isEven(value):
    return value % 2 == 0


# Поиск целого числа (альтернативный способ простой)


# В качестве первого альтернативного варианта, что приходит в голову,
# можно использовать "математический" подход, который может быть и выполняет свою задачу,
# но во-первых, не совсем очевиден в качестве решения, что влияет на читаемость.
# Во-вторых, производительность. Мы выполняем дополнительные операции из-за чего
# метод может быть не столь эффективен.
def isEvenAlternative1(value: int) -> bool:
    """
    Проверяет четность целого числа.

    Args:
        value (int): Целое число.

    Returns:
        bool: True если число четное, False если нечетное.
    """
    return value - value // 2 * 2 == 0


# Поиск целого числа (альтернативный способ)


# В качестве второго альтернативного варианта можно попробовать
# использовать побитовую операцию "И". Этот способ будет быстрейшим,
# потому как операция производится на уровне процессора, но он имеет
# свои недостатки, такой как "специфичность" для столь простой операции
# и может быть не таким очевидным "с ходу", как использование оператора "%".
def isEvenAlternative2(value: int) -> bool:
    """
    Проверяет четность целого числа.

    Args:
        value (int): Целое число.

    Returns:
        bool: True если число четное, False если нечетное.
    """
    return value & 1 == 0
