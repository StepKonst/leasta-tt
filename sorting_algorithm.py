# На языке Python предложить алгоритм, который быстрее всего
# (по процессорным тикам) отсортирует данный ей массив чисел.
# Массив может быть любого размера со случайным порядком
# чисел (в том числе и отсортированным). Объяснить, почему вы
# считаете, что функция соответствует заданным критериям.


def quick_sort(array: list) -> list:
    """
    Сортирует массив чисел в порядке возрастания

    Быстрая сортировка выбирает опорный элемент и рекурсивно разбивает массив на
    подмассивы, содержащие элементы меньше и больше этого опорного элемента. Это
    позволяет сократить количество операций сравнения, делая алгоритм эффективным
    для случайных массивов.

    Среднее время работы алгоритма O(n log n) наиболее частый результат на случайных массивах.
    Худший случай работы алгоритма O(n^2) если массив уже отсортирован
    или почти отсортирован, а выбор опорного элемента неудачен.

    Args:
        array (list): массив чисел

    Returns:
        list: отсортированный массив чисел
    """
    if len(array) <= 1:
        return array
    el = array[0]

    left = list(filter(lambda x: x < el, array))
    center = list(filter(lambda x: x == el, array))
    right = list(filter(lambda x: x > el, array))

    return quick_sort(left) + center + quick_sort(right)
